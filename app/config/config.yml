imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        server_version: '5.5'
        mapping_types:
            enum:       string
            varbinary:  string
            tinyblob:   text
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# FOSRest Configuration
fos_rest:
    view:
        view_response_listener: force
        formats:
            json: true
            xml: true
            rss: false
        mime_types:
            json: ['application/json', 'application/x-json', 'application/vnd.example-com.foo+json']
            jpg: 'image/jpeg'
            png: 'image/png'
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    body_listener: true
    param_fetcher_listener: force
    allowed_methods_listener: true
    access_denied_listener:
        json: true
    format_listener:
        enabled: true
        rules:
          - { path: '^/', priorities:  ['json', 'xml', 'html'], fallback_format: json, prefer_extension: true }
    routing_loader:
        default_format: ~
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true

# Cache Configuration
fos_http_cache:
    cache_control:
        rules:
            # the controls section values are used in a call to Response::setCache();
            -
                match:
                    path: ^/notes
                    methods: [GET, HEAD]
                headers:
                    cache_control: { public: true, max_age: 15, s_maxage: 30 }
                    last_modified: "-1 hour"
                    vary: [Accept-Encoding, Accept-Language]

# Doc Configuration
nelmio_api_doc: ~

# Cors Configuration
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
        forced_allow_origin_value: ~
    paths:
        '^/':
            allow_origin: ['*']
            allow_headers: ['Origin','X-Requested-With','Authorization','Content-Type','Accept','Cache-Control']
            allow_methods: ['POST','GET','DELETE','PUT']
            max_age: 3600

# User Configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    registration:
        form:
            type: fos_user_registration

# OAuth2 Configuration
fos_oauth_server:
    db_driver:           orm
    client_class:        AppBundle\Entity\Client
    access_token_class:  AppBundle\Entity\AccessToken
    refresh_token_class: AppBundle\Entity\RefreshToken
    auth_code_class:     AppBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager

# FS Configuration
knp_gaufrette:
    stream_wrapper: ~

    adapters:
        avatar_adapter:
            local:
                directory: '%kernel.root_dir%/../web/uploads/avatars'
        media_adapter:
            local:
                directory: '%kernel.root_dir%/../web/uploads/medias'

    filesystems:
        avatar_fs:
            adapter: avatar_adapter
        media_fs:
            adapter: media_adapter

# Uploader Configuration
vich_uploader:
    db_driver: orm
    storage: gaufrette

    mappings:
        avatar:
            uri_prefix: /uploads/avatars/
            upload_destination: avatar_fs
            namer: vich_uploader.namer_uniqid

            inject_on_load: true
            delete_on_update: true
            delete_on_remove: true

        media:
            uri_prefix: /uploads/medias/
            upload_destination: media_fs

            inject_on_load: true
            delete_on_update: false
            delete_on_remove: true